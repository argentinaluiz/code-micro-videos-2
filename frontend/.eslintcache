[{"/var/www/frontend/src/index.tsx":"1","/var/www/frontend/src/reportWebVitals.ts":"2","/var/www/frontend/src/App.tsx":"3","/var/www/frontend/src/components/Navbar/index.tsx":"4","/var/www/frontend/src/components/Navbar/Menu.tsx":"5","/var/www/frontend/src/components/Page.tsx":"6","/var/www/frontend/src/routes/AppRouter.tsx":"7","/var/www/frontend/src/routes/index.tsx":"8","/var/www/frontend/src/pages/Dashboard.tsx":"9","/var/www/frontend/src/components/Breadcrumbs.tsx":"10","/var/www/frontend/src/pages/category/PageList.tsx":"11","/var/www/frontend/src/pages/category/Table.tsx":"12","/var/www/frontend/src/util/http/index.ts":"13","/var/www/frontend/src/pages/genre/PageList.tsx":"14","/var/www/frontend/src/pages/genre/Table.tsx":"15","/var/www/frontend/src/pages/cast-member/PageList.tsx":"16","/var/www/frontend/src/pages/cast-member/Table.tsx":"17","/var/www/frontend/src/util/http/category-http.ts":"18","/var/www/frontend/src/util/http/http-resource.ts":"19","/var/www/frontend/src/pages/category/PageForm.tsx":"20","/var/www/frontend/src/pages/category/Form.tsx":"21","/var/www/frontend/src/pages/genre/PageForm.tsx":"22","/var/www/frontend/src/pages/genre/Form.tsx":"23","/var/www/frontend/src/util/http/genre-http.ts":"24","/var/www/frontend/src/pages/cast-member/PageForm.tsx":"25","/var/www/frontend/src/pages/cast-member/Form.tsx":"26","/var/www/frontend/src/util/http/cast-member-http.ts":"27","/var/www/frontend/src/theme.ts":"28","/var/www/frontend/src/components/Badge.tsx":"29","/var/www/frontend/src/util/vendor/yup.ts":"30","/var/www/frontend/src/components/SnackbarProvider.tsx":"31"},{"size":500,"mtime":1608299870744,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":1608299870744,"results":"34","hashOfConfig":"33"},{"size":921,"mtime":1613671900982,"results":"35","hashOfConfig":"33"},{"size":959,"mtime":1608323720178,"results":"36","hashOfConfig":"33"},{"size":1908,"mtime":1609186243854,"results":"37","hashOfConfig":"33"},{"size":658,"mtime":1608649921596,"results":"38","hashOfConfig":"33"},{"size":586,"mtime":1608584662648,"results":"39","hashOfConfig":"33"},{"size":2216,"mtime":1613673166275,"results":"40","hashOfConfig":"33"},{"size":252,"mtime":1608584424896,"results":"41","hashOfConfig":"33"},{"size":2369,"mtime":1609188477515,"results":"42","hashOfConfig":"33"},{"size":690,"mtime":1609186429182,"results":"43","hashOfConfig":"33"},{"size":1451,"mtime":1609187767117,"results":"44","hashOfConfig":"33"},{"size":125,"mtime":1608670477581,"results":"45","hashOfConfig":"33"},{"size":673,"mtime":1609186432222,"results":"46","hashOfConfig":"33"},{"size":1523,"mtime":1608675896078,"results":"47","hashOfConfig":"33"},{"size":706,"mtime":1609186424574,"results":"48","hashOfConfig":"33"},{"size":1236,"mtime":1608676186597,"results":"49","hashOfConfig":"33"},{"size":172,"mtime":1608734635707,"results":"50","hashOfConfig":"33"},{"size":748,"mtime":1608736050352,"results":"51","hashOfConfig":"33"},{"size":400,"mtime":1613135072794,"results":"52","hashOfConfig":"33"},{"size":5634,"mtime":1613673818540,"results":"53","hashOfConfig":"33"},{"size":297,"mtime":1608754415311,"results":"54","hashOfConfig":"33"},{"size":6829,"mtime":1613676835346,"results":"55","hashOfConfig":"33"},{"size":162,"mtime":1608753416408,"results":"56","hashOfConfig":"33"},{"size":307,"mtime":1608754759253,"results":"57","hashOfConfig":"33"},{"size":5572,"mtime":1613674939394,"results":"58","hashOfConfig":"33"},{"size":178,"mtime":1608754723801,"results":"59","hashOfConfig":"33"},{"size":3354,"mtime":1609188617658,"results":"60","hashOfConfig":"33"},{"size":636,"mtime":1609187948724,"results":"61","hashOfConfig":"33"},{"size":307,"mtime":1613054075663,"results":"62","hashOfConfig":"33"},{"size":1453,"mtime":1613672722805,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"105ko5q",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/var/www/frontend/src/index.tsx",[],["130","131"],"/var/www/frontend/src/reportWebVitals.ts",[],"/var/www/frontend/src/App.tsx",[],"/var/www/frontend/src/components/Navbar/index.tsx",[],"/var/www/frontend/src/components/Navbar/Menu.tsx",[],"/var/www/frontend/src/components/Page.tsx",[],"/var/www/frontend/src/routes/AppRouter.tsx",[],"/var/www/frontend/src/routes/index.tsx",[],"/var/www/frontend/src/pages/Dashboard.tsx",[],"/var/www/frontend/src/components/Breadcrumbs.tsx",[],"/var/www/frontend/src/pages/category/PageList.tsx",[],"/var/www/frontend/src/pages/category/Table.tsx",[],"/var/www/frontend/src/util/http/index.ts",[],"/var/www/frontend/src/pages/genre/PageList.tsx",[],"/var/www/frontend/src/pages/genre/Table.tsx",[],"/var/www/frontend/src/pages/cast-member/PageList.tsx",[],"/var/www/frontend/src/pages/cast-member/Table.tsx",[],"/var/www/frontend/src/util/http/category-http.ts",[],"/var/www/frontend/src/util/http/http-resource.ts",[],"/var/www/frontend/src/pages/category/PageForm.tsx",[],"/var/www/frontend/src/pages/category/Form.tsx",["132"],"import { Box, Button, ButtonProps, Checkbox, FormControlLabel, makeStyles, TextField, Theme } from '@material-ui/core';\nimport * as React from 'react';\nimport categoryHttp from '../../util/http/category-http';\nimport * as yup from '../../util/vendor/yup'\nimport { useForm } from \"react-hook-form\"\nimport { useHistory, useParams } from 'react-router';\nimport { useSnackbar } from 'notistack';\n\nconst useStyles = makeStyles((theme: Theme) => {\n    return {\n        submit: {\n            margin: theme.spacing(1)\n        }\n    }\n})\n\nconst useYupValidationResolver = validationSchema =>\n  React.useCallback(\n    async data => {\n      try {\n        const values = await validationSchema.validate(data, {\n          abortEarly: false\n        });\n\n        return {\n          values,\n          errors: {}\n        };\n      } catch (errors) {\n        return {\n          values: {},\n          errors: errors.inner.reduce(\n            (allErrors, currentError) => ({\n              ...allErrors,\n              [currentError.path]: {\n                type: currentError.type ?? \"validation\",\n                message: currentError.message\n              }\n            }),\n            {}\n          )\n        };\n      }\n    },\n    [validationSchema]\n  );\n\nexport const Form = () => {\n    const validationSchema = React.useMemo(\n        () =>\n          yup.object({\n            name: yup.string().label('Nome').required().max(255),\n          }),\n        []\n    );\n    const resolver = useYupValidationResolver(validationSchema);\n    const {register, handleSubmit, getValues, setValue, errors, reset, watch} = useForm<{name: string, is_active: boolean}>({resolver, defaultValues: {is_active: true}})\n\n    const classes = useStyles()\n    const snackbar = useSnackbar();\n    const history = useHistory()\n    const {id} = useParams<{id:string}>()\n    const [category, setCategory] = React.useState<{id: string} | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n\n    const buttonProps: ButtonProps = {\n        className: classes.submit,\n        color: 'secondary',\n        variant: \"contained\",\n        disabled: loading\n    }\n\n    React.useEffect(() => {\n        register({name: \"is_active\"})\n    }, [register])\n\n    React.useEffect(() => {\n        if(!id){\n            return\n        }\n        async function getCategory(){\n            setLoading(true)\n            try{\n                const {data} = await categoryHttp.get(id)\n                setCategory(data.data)\n                reset(data.data)\n            } catch (error) {\n                console.log(error);\n                snackbar.enqueueSnackbar(\n                    'Não foi possível carregar as informações',\n                    {variant: 'error'}\n                )\n            } finally {\n                setLoading(false)\n            }\n        }\n        getCategory()\n    }, [])\n\n    async function onSubmit(formData, event){\n        setLoading(true)\n        try {\n            const http = !category\n                ? categoryHttp.create(formData)\n                : categoryHttp.update(category.id, formData)\n                const {data} = await http\n                snackbar.enqueueSnackbar(\n                    'Categoria salva com sucesso',\n                    {variant: 'success'}\n                )\n                setTimeout(() => {\n                    event ? (\n                        id\n                            ? history.replace(`/categories/${data.data.id}/edit`)\n                            : history.push(`/categories/${data.data.id}/edit`)\n                    ) : history.push('/categories')\n                })\n        } catch(error) {\n            console.log(error)\n            snackbar.enqueueSnackbar(\n                'Erro ao salvar categoria',\n                {variant: 'error'}\n            )\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={'outlined'}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name.message}\n                InputLabelProps={{ shrink:true }}\n            />\n\n            <TextField\n                name=\"description\"\n                label=\"Descrição\"\n                multiline\n                rows=\"4\"\n                fullWidth\n                variant={'outlined'}\n                margin={'normal'}\n                inputRef={register}\n                disabled={loading}\n                InputLabelProps={{ shrink:true }}\n            />\n            <FormControlLabel\n              disabled={loading}\n              control={\n                  <Checkbox\n                      name=\"is_active\"\n                      color={\"primary\"}\n                      onChange={\n                          () => setValue('is_active', !getValues()['is_active'])\n                      }\n                      checked={watch('is_active')}\n                      disabled={loading}\n                  />\n              }\n              label={'Ativo?'}\n              labelPlacement={'end'}\n            />\n            <Box dir={\"rtl\"}>\n                <Button\n                    color={\"primary\"}\n                    {...buttonProps}\n                    onClick={() => onSubmit(getValues(), null)}\n                >\n                    Salvar\n                </Button>\n                <Button {...buttonProps} type=\"submit\">Salvar e continuar editando</Button>\n            </Box>\n        </form>\n    );\n};\n","/var/www/frontend/src/pages/genre/PageForm.tsx",[],"/var/www/frontend/src/pages/genre/Form.tsx",["133"],"/var/www/frontend/src/util/http/genre-http.ts",[],"/var/www/frontend/src/pages/cast-member/PageForm.tsx",[],"/var/www/frontend/src/pages/cast-member/Form.tsx",["134"],"import { Box, Button, ButtonProps, FormControl, FormControlLabel, FormHelperText, FormLabel, makeStyles, Radio, RadioGroup, TextField, Theme } from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\nimport * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, useParams } from 'react-router-dom';\nimport castMemberHttp from '../../util/http/cast-member-http';\nimport * as yup from '../../util/vendor/yup'\n\nconst useStyles = makeStyles((theme: Theme) => {\n    return {\n        submit: {\n            margin: theme.spacing(1)\n        }\n    }\n})\n\nconst useYupValidationResolver = validationSchema =>\n  React.useCallback(\n    async data => {\n      try {\n        const values = await validationSchema.validate(data, {\n          abortEarly: false\n        });\n\n        return {\n          values,\n          errors: {}\n        };\n      } catch (errors) {\n        return {\n          values: {},\n          errors: errors.inner.reduce(\n            (allErrors, currentError) => ({\n              ...allErrors,\n              [currentError.path]: {\n                type: currentError.type ?? \"validation\",\n                message: currentError.message\n              }\n            }),\n            {}\n          )\n        };\n      }\n    },\n    [validationSchema]\n  );\n\nexport const Form = () => {\n    const validationSchema = React.useMemo(\n        () =>\n          yup.object({\n            name: yup.string().label('Nome').required().max(255),\n            type: yup.number().label('Tipo').required()\n          }),\n        []\n    );\n    const resolver = useYupValidationResolver(validationSchema);\n    const {register, handleSubmit, getValues, setValue, errors, reset, watch} = useForm<{name: string, type: string}>({resolver})\n\n    const classes = useStyles()\n    const snackbar = useSnackbar();\n    const history = useHistory()\n    const {id} = useParams<{id:string}>()\n    const [castMember, setCastMember] = React.useState<{id: string} | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n\n    const buttonProps: ButtonProps = {\n        className: classes.submit,\n        color: 'secondary',\n        variant: \"contained\",\n        disabled: loading\n    }\n\n    React.useEffect(() => {\n        register({name: \"type\"})\n    }, [register])\n\n    React.useEffect(() => {\n        if(!id){\n            return\n        }\n        async function getCastMember(){\n            setLoading(true)\n            try{\n                const {data} = await castMemberHttp.get(id)\n                setCastMember(data.data)\n                reset(data.data)\n            } catch (error) {\n                console.log(error);\n                snackbar.enqueueSnackbar(\n                    'Não foi possível carregar as informações',\n                    {variant: 'error'}\n                )\n            } finally {\n                setLoading(false)\n            }\n        }\n        getCastMember()\n    }, [])\n\n    async function onSubmit(formData, event){\n        setLoading(true)\n        try {\n            const http = !castMember\n                ? castMemberHttp.create(formData)\n                : castMemberHttp.update(castMember.id, formData)\n                const {data} = await http\n                snackbar.enqueueSnackbar(\n                    'Membro de Elenco salvo com sucesso',\n                    {variant: 'success'}\n                )\n                setTimeout(() => {\n                    event ? (\n                        id\n                            ? history.replace(`/cast-members/${data.data.id}/edit`)\n                            : history.push(`/cast-members/${data.data.id}/edit`)\n                    ) : history.push('/cast-members')\n                })\n        } catch(error) {\n            console.log(error)\n            snackbar.enqueueSnackbar(\n                'Erro ao salvar Membro de Elenco',\n                {variant: 'error'}\n            )\n        } finally {\n            setLoading(false)\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n                name=\"name\"\n                label=\"Nome\"\n                fullWidth\n                variant={'outlined'}\n                inputRef={register}\n                disabled={loading}\n                error={errors.name !== undefined}\n                helperText={errors.name && errors.name.message}\n                InputLabelProps={{ shrink: true }}\n            />\n            <FormControl\n                margin={\"normal\"}\n                error={errors.type !== undefined}\n                disabled={loading}\n            >\n                <FormLabel component=\"legend\">Tipo</FormLabel>\n                <RadioGroup\n                    name=\"type\"\n                    onChange={(e) => {\n                        setValue('type', parseInt(e.target.value))\n                    }}\n                    value={watch('type') + \"\"}\n                >\n                    <FormControlLabel value=\"1\" control={<Radio color={\"primary\"}/>} label=\"Diretor\"/>\n                    <FormControlLabel value=\"2\" control={<Radio color={\"primary\"}/>} label=\"Ator\"/>\n                </RadioGroup>\n                {\n                    errors.type && <FormHelperText id=\"type-helper-text\">{errors.type.message}</FormHelperText>\n                }\n            </FormControl>\n            <Box dir={\"rtl\"}>\n                <Button {...buttonProps} onClick={() => onSubmit(getValues(), null)}>Salvar</Button>\n                <Button {...buttonProps} type=\"submit\">Salvar e continuar editando</Button>\n            </Box>\n        </form>\n    );\n};\n","/var/www/frontend/src/util/http/cast-member-http.ts",[],"/var/www/frontend/src/theme.ts",[],"/var/www/frontend/src/components/Badge.tsx",[],"/var/www/frontend/src/util/vendor/yup.ts",["135","136","137"],"import { setLocale } from 'yup'\n\nconst ptBR = {\n    mixed: {\n        required: '${path} é requerido'\n    },\n    string: {\n        max: '${path} precisa ter no máximo ${max} caracteres'\n    },\n    number: {\n        min: '${path} precisa ser no mínimo ${min}'\n    }\n}\n\nsetLocale(ptBR)\n\nexport * from 'yup'\n","/var/www/frontend/src/components/SnackbarProvider.tsx",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":98,"column":8,"nodeType":"144","endLine":98,"endColumn":10,"suggestions":"145"},{"ruleId":"142","severity":1,"message":"143","line":117,"column":8,"nodeType":"144","endLine":117,"endColumn":10,"suggestions":"146"},{"ruleId":"142","severity":1,"message":"143","line":99,"column":8,"nodeType":"144","endLine":99,"endColumn":10,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":5,"column":19,"nodeType":"150","messageId":"151","endLine":5,"endColumn":40},{"ruleId":"148","severity":1,"message":"149","line":8,"column":14,"nodeType":"150","messageId":"151","endLine":8,"endColumn":63},{"ruleId":"148","severity":1,"message":"149","line":11,"column":14,"nodeType":"150","messageId":"151","endLine":11,"endColumn":52},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'id', 'reset', and 'snackbar'. Either include them or remove the dependency array.","ArrayExpression",["154"],["155"],["156"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"157","fix":"159"},{"desc":"157","fix":"160"},"Update the dependencies array to be: [id, reset, snackbar]",{"range":"161","text":"162"},{"range":"163","text":"162"},{"range":"164","text":"162"},[2845,2847],"[id, reset, snackbar]",[3478,3480],[2927,2929]]